plugins {
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	invoker
}

dependencies {
	// Every function needs this dependency to get the Functions Framework API.
	compileOnly 'com.google.cloud.functions:functions-framework-api:1.0.4'

	// To run function locally using Functions Framework's local invoker
	invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.1.0'

	// These dependencies are only used by the tests.
	testImplementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'com.google.truth:truth:1.1.3'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'com.google.code.gson:gson:2.9.1'
}

// Register a "runFunction" task to run the function locally
tasks.register("runFunction", JavaExec) {
	main = 'com.google.cloud.functions.invoker.runner.Invoker'
	classpath(configurations.invoker)
	inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
	args(
			'--target', project.findProperty('run.functionTarget') ?: '',
			'--port', project.findProperty('run.port') ?: 8080
	)
	doFirst {
		args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
	}
}